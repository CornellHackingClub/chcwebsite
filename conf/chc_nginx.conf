# CHC Website
upstream django {
    server unix:///run/chc_website.sock; # for a file socket (much more efficient)
    # server 127.0.0.1:8000; # for a web port socket (we'll use this first)
}

# CHC Web Challenge
upstream web_challenge {
    server localhost:1343;
}

# configuration of the server
server {
    # the port your site will be served on
    listen      443 ssl;
    # the domain name it will serve for
    server_name chc.cs.cornell.edu; 
    # https stuff
    ssl_certificate /etc/letsencrypt/live/chc.cs.cornell.edu/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/chc.cs.cornell.edu/privkey.pem;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_dhparam /etc/ssl/certs/dhparam.pem;
    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_stapling on;
    ssl_stapling_verify on;
#    add_header Strict-Transport-Security max-age=15768000;
    charset     utf-8;

    # max upload size
    client_max_body_size 35M;   # adjust to taste

    error_page 404 /404;

    # Django media
    location /media  {
        alias /home/chc/CHC/Website/media;  # your Django project's media files - amend as required
    }

    location /static {
        alias /home/chc/CHC/Website/CornellHackingClubWebsite-Full/static; # your Django project's static files - amend as required
    }

    # The web challenge in Flask needs special care
    location /challenge/web/static/ {
        alias /home/chc/CHC/Website/CHC-Challenges/Web/static/;
    }
    location /challenge/web/ {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_pass http://web_challenge;
    }

    # Prove to LetsEncrypt that we own this website.
    location /.well-known {
        alias /home/chc/CHC/Website/public_html/.well-known;
    }
    # Finally, send all non-media requests to the Django server.
    location / {
        uwsgi_pass  django;
        include     /home/chc/CHC/Website/CornellHackingClubWebsite-Full/conf/uwsgi_params; # the uwsgi_params file you installed
    }
}
# Redirect HTTP to HTTPS
server {
    listen 80;
    server_name chc.cs.cornell.edu;

    return 301 https://$host$request_uri;
}

server {
    listen 1338;
    server_name chc.cs.cornell.edu;

}
